name: Docker Multiplatform Build ci

on:
  push:
    branches:
      - 'master'
      - 'develop'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Docker Lint
        # https://github.com/marketplace/actions/hadolint-action
        uses: hadolint/hadolint-action@v3.0.0
        with:
          dockerfile: build/Dockerfile
          no-fail: true
          verbose: true
      -
        name: Set up QEMU
        # https://github.com/marketplace/actions/docker-setup-qemu
        # set up more platforms (default = all)
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        id: buildx
        # https://github.com/marketplace/actions/docker-setup-buildx
        # set up a multi-platform builder for Docker containers
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        # https://github.com/marketplace/actions/docker-login
        # login to DockerHub with secrets login & token
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Cache Docker layers
        # https://github.com/marketplace/actions/cache
        # this action allows caching dependancies and build output
        uses: actions/cache@v3
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      -
        name: Build and push Jeedom light with Xdebug
        # https://github.com/marketplace/actions/build-and-push-docker-images
        uses: docker/build-push-action@v3
        continue-on-error: true
        with:
          context: build
          target: light_xdebug
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ${{ secrets.DOCKER_USER }}/jeedom:light-debug-dev
      -
        name: Build and push Jeedom light
        uses: docker/build-push-action@v3
        continue-on-error: true
        with:
          context: build
          target: light_jeedom
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ${{ secrets.DOCKER_USER }}/jeedom:light-dev
      -
        name: Build and push Jeedom Full Standalone Dev
        uses: docker/build-push-action@v3
        continue-on-error: true
        with:
          context: build
          target: full_jeedom
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ${{ secrets.DOCKER_USER }}/jeedom:dev
      -
        name: Build and push Jeedom Full Standalone with XDebug
        uses: docker/build-push-action@v3
        continue-on-error: true
        with:
          context: build
          target: full_xdebug
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ${{ secrets.DOCKER_USER }}/jeedom:debug-dev
      -
        name: Build and push Jeedom Full Standalone Beta
        # Same builds with arg = beta...
        uses: docker/build-push-action@v3
        continue-on-error: true
        with:
          context: build
          target: full_jeedom
          build-args: JEEDOM_VERSION=beta
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ${{ secrets.DOCKER_USER }}/jeedom:beta
