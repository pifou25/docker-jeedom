name: Docker Image CI

on:
  push:
    branches: [ feat/script_rate_limit ]
  pull_request:
    branches: [ none ]
  # this is to manually trigger the worklow
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Reason'     
        default: 'Manual launch'

jobs:

  build:
  # this step use only simple scripts commands

    runs-on: ubuntu-latest

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
        options: >-
          --health-cmd "wget --spider -q http://localhost:5000/v2/ || exit 1"
          --health-interval 5s
          --health-retries 10
          --name registry-cache
          --volume /tmp/registry-cache:/var/lib/registry
        env:
          REGISTRY_PROXY_REMOTEURL: https://registry-1.docker.io
    
    env:
      DOCKER_BUILDKIT: 1
      BUILDKIT_INSECURE_REGISTRY: registry:5000
      # used to download jeedom source
      # JEEDOM_REPO: ${{ github.ref_name == 'master' && 'jeedom/core' || 'pifou25/jeedom-core' }}
      JEEDOM_REPO: jeedom/core
      # branch to use: master if the current branch is master, develop if not
      # this is used to set the jeedom version in the Dockerfile
      # JEEDOM_BRANCH: ${{ github.ref_name == 'master' && 'master' || 'develop' }}
      JEEDOM_BRANCH: master
      # destination docker registry image name
      REGISTRY_IMAGE: pifou25/jeedom
      # XDEBUG enabled by default for develop and beta branches
      XDEBUG: ${{ github.ref_name == 'master' && 'false' || 'true' }}
      DEBIAN: trixie
      PHP: 8.4

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      -
        name: Login to DockerHub
        # https://github.com/marketplace/actions/docker-login
        # login to DockerHub with login & secrets token - for pull to avoid error HTTP 429 Too many requests
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Login to GitHub Container Registry
        # 🔹 Service de cache Docker Registry ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_SECRET }}
        
      - name: Run DockerHub rate limit check
        id: ratecheck
        run: |
          chmod +x .github/scripts/rate_limit.sh
          ./.github/scripts/rate_limit.sh

      - name: Add summary to Job Summary
        run: |
          echo "### 🐳 DockerHub Pull Limit" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.ratecheck.outputs.summary }}" >> $GITHUB_STEP_SUMMARY

      - name: check Docker.io rate limit
        if: ${{ steps.ratecheck.outputs.remaining && (steps.ratecheck.outputs.remaining < 10) }}
        run: |
          echo "⚠️ Il reste moins de 10 pulls : ${{ steps.ratecheck.outputs.remaining }} / ${{ steps.ratecheck.outputs.limit }}" >> $GITHUB_STEP_SUMMARY && exit 1

      # prepare image cache for local registry
      # https://github.com/marketplace/actions/cache
      - id: image-cache
        uses: actions/cache@v4.2.2
        with:
          path: /tmp/registry-cache
          key: registry-cache

      # local registry for docker cache
      #- name: Start local Docker registry (mirror/cache)
      #  run: |
      #    docker network create buildnet
      #    docker run -d -p 5000:5000 --restart=always --name registry \
      #      --network buildnet -v /tmp/docker-registry:/var/lib/registry \
      #      registry:2
      #    npx wait-on tcp:5000

      # 3️⃣ Configure le cache proxy Docker Hub
      - name: Configure Docker to use local registry mirror
        run: |
          echo '{ "registry-mirrors": ["http://localhost:5000"] }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker
          cat /etc/docker/daemon.json
          docker info | grep -A5 Mirrors || true

      - name: Set up Docker Buildx
        # https://github.com/marketplace/actions/docker-setup-buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          name: jeedom-builder
          buildkitd-flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
          buildkitd-config-inline: |
            [registry."registry:5000"]
              http = true
              insecure = true

      #- name: Enable buildx
      #  run: |
      #    docker buildx create --use --name jeedom-builder --driver docker-container --driver-opt network=buildnet
      #    docker buildx inspect --bootstrap

      - name: Build with cache using previous builder
        # docker build --builder [name] --build-arg [arg=value] --file [file] --tag [tag] [directory]
        run: |
          docker buildx build --builder jeedom-builder  \
            --build-arg DEBIAN=${{ env.DEBIAN }} \
            --build-arg PHP=${{ env.PHP }} \
            --build-arg JEEDOM_REPO=${{ env.JEEDOM_REPO }} \
            --build-arg JEEDOM_VERSION=${{ env.JEEDOM_BRANCH }} \
            --build-arg XDEBUG=false \
            --build-arg XTRARGS=-light \
            --cache-from type=registry,ref=registry:5000/${{ env.REGISTRY_IMAGE }}:buildcache \
            --cache-to type=registry,ref=registry:5000/${{ env.REGISTRY_IMAGE }}:buildcache,mode=max \
            --file build/Dockerfile \
            --tag ghcr.io/${{ env.REGISTRY_IMAGE }}:test \
            --load build

      - name: Docker Push
        run: |
          docker push ghcr.io/${{ secrets.DOCKER_USER }}/jeedom:test

      - name: Run DockerHub rate limit check
        run: |
          ./.github/scripts/rate_limit.sh
          echo "### 🐳 DockerHub Pull Limit at the end" >> $GITHUB_STEP_SUMMARY
          echo "${summary}" >> $GITHUB_STEP_SUMMARY
