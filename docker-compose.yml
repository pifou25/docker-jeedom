# version: '2.3'


services:

  nginx:
    image: jc21/nginx-proxy-manager:2.8.1
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
    volumes:
      - ./data/nginx:/data
      - ./data/letsencrypt:/etc/letsencrypt
    depends_on:
      - db


  db:
    image: yobasystems/alpine-mariadb:latest
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 1m30s
      retries: 3
      start_period: 40s
      timeout: 20s
    volumes:
      - ./data/mysql:/var/lib/mysql


  jeedom:
    build: ./php
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:?required value}
      - MYSQL_JEEDOM_DATABASE=${MYSQL_DATABASE:-jeedom}
      - MYSQL_JEEDOM_USER=${MYSQL_USER:-jeedom}
      - MYSQL_JEEDOM_PASSWD=${MYSQL_PASSWORD:?required value}
      - JEEDOM_BRANCH=beta
      - MYSQL_HOST=db
      - TZ=${TIME_ZONE}
    hostname: jeedom
    restart: unless-stopped
    volumes:
      - ./jeedom:/var/www/html
      - ./backup:/tmp/backup
    healthcheck:
      test: ["CMD-SHELL", "curl -so /tmp/status http://localhost/here.html || exit 1"]
      interval: 1m30s
      retries: 3
      start_period: 40s
      timeout: 20s
    labels:
      # label chadburn for the "cron" container
      chadburn.enabled: "true"
      chadburn.job-exec.jeedom-cron.schedule: "@every 1m"
      chadburn.job-exec.jeedom-cron.command: "/usr/local/bin/php /var/www/html/core/php/jeeCron.php >> /var/www/html/log/cron.log 2>&1"
    depends_on:
      - db


  # Scheduler Service: mcuadros/ofelia or premoweb/chadburn
  scheduler:
    image: premoweb/chadburn
    environment:
      - TZ=${TIME_ZONE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - jeedom


  phpmyadmin:
    image: phpmyadmin:5.0
    depends_on:
      - db


  portainer:
    image: portainer/portainer-ce
    privileged: true
    environment:
      - TZ=${TIME_ZONE}
    ports:
        - 8000:8000
        - 9000:9000
    restart: unless-stopped
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./data/portainer:/data


  zwave:
    image: zwavejs/zwavejs2mqtt
    ports:
      - 3000:3000
      - 8091:8091
    environment:
      - TZ=${TIME_ZONE}
    devices:
    #  - "/dev/ttyUSB0"
    #  - "/dev/ttyUSB1"
      - "/dev/ttyACM0"
    volumes:
      - ./data/zwave:/usr/src/app/store
    restart: unless-stopped
    depends_on:
      - mqtt


  mqtt:
    image: eclipse-mosquitto
    ports:
      - 1883:1883 #Uniquement si besoin d'avoir le port expos√©
    environment:
      - TZ=${TIME_ZONE}
    volumes:
      - ./mosquitto:/mosquitto/config
      - ./data/mosquitto/log:/mosquitto/log
      - ./data/mosquitto/data:/mosquitto/data
    restart: unless-stopped
